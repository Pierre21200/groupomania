[{"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\index.js":"1","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\App.js":"3","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\index.js":"4","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\LogIn\\index.js":"5","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\FetchData\\Users\\index.js":"6","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\Sidebar\\index.js":"7","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Input\\index.js":"8","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Button\\index.js":"9","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\User\\index.js":"10","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\DecodeToken\\index.js":"11","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\FetchData\\Posts\\index.js":"12","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\FetchData\\Comments\\index.js":"13","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Form\\index.js":"14","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\PrivateRoute\\index.js":"15","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\Page404\\index.js":"16","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Modal\\index.js":"17","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Moderate\\index.js":"18","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Textarea\\index.js":"19","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\MyProfile\\index.js":"20","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Myprofile\\index.js":"21","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\Layout\\index.js":"22","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\Layout\\Comments\\index.js":"23"},{"size":500,"mtime":1611165248700,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1609252129000,"results":"26","hashOfConfig":"25"},{"size":1620,"mtime":1618226164728,"results":"27","hashOfConfig":"25"},{"size":2996,"mtime":1618221275393,"results":"28","hashOfConfig":"25"},{"size":1142,"mtime":1617790784701,"results":"29","hashOfConfig":"25"},{"size":1586,"mtime":1618167359076,"results":"30","hashOfConfig":"25"},{"size":2958,"mtime":1618134609974,"results":"31","hashOfConfig":"25"},{"size":487,"mtime":1615967422359,"results":"32","hashOfConfig":"25"},{"size":427,"mtime":1612793843819,"results":"33","hashOfConfig":"25"},{"size":731,"mtime":1618045249762,"results":"34","hashOfConfig":"25"},{"size":339,"mtime":1617000675000,"results":"35","hashOfConfig":"25"},{"size":943,"mtime":1617104163427,"results":"36","hashOfConfig":"25"},{"size":771,"mtime":1615711314924,"results":"37","hashOfConfig":"25"},{"size":9468,"mtime":1618211738989,"results":"38","hashOfConfig":"25"},{"size":640,"mtime":1618054809374,"results":"39","hashOfConfig":"25"},{"size":118,"mtime":1615890650899,"results":"40","hashOfConfig":"25"},{"size":3242,"mtime":1618137627574,"results":"41","hashOfConfig":"25"},{"size":156,"mtime":1617008554181,"results":"42","hashOfConfig":"25"},{"size":511,"mtime":1617003145926,"results":"43","hashOfConfig":"25"},{"size":2487,"mtime":1618041998864,"results":"44","hashOfConfig":"25"},{"size":2564,"mtime":1618042717112,"results":"45","hashOfConfig":"25"},{"size":11206,"mtime":1618226183039,"results":"46","hashOfConfig":"25"},{"size":5313,"mtime":1618223649631,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"5mbk5g",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"50"},"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\index.js",[],["107","108"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\App.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\index.js",["109"],"import React, { useContext, useEffect, useState } from \"react\";\nimport Layout from \"./Layout/index.js\";\nimport logo from \"../../icons/icon-c.png\";\nimport { UserContext } from \"../../App.js\";\nimport Button from \"../SubComponents/Button/index.js\";\n\nconst Home = ({ userProfile }) => {\n  const auth = useContext(UserContext);\n  const [myProfile, setMyProfile] = useState(null);\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"home-header\">\n        <div className=\"logo-home laptop\">\n          <img className=\"home-logo\" src={logo} alt=\"groupomania-logo\" />\n        </div>\n\n        <div className=\"welcome-home laptop\">\n          <p className=\"welcome-title\">\n            Bonjour {auth.user.firstName}, bienvenue sur Groupomania !\n          </p>\n        </div>\n\n        <div className=\"welcome-home mobile\">\n          <p className=\"welcome-title\">Groupomania</p>\n          {!userProfile && !myProfile ? (\n            <Button\n              onClick={() => setMyProfile(auth.user.id)}\n              disabled=\"\"\n              className=\"btn navbar-btn btn-outline-light \"\n              value=\"Mon Profil\"\n            />\n          ) : null}\n\n          {userProfile ? (\n            <Button\n              onClick={() => setMyProfile(null)}\n              disabled=\"disabled\"\n              className=\"btn navbar-btn btn-outline-light \"\n              value=\"Retour aux posts\"\n            />\n          ) : null}\n\n          {myProfile ? (\n            <Button\n              onClick={() => setMyProfile(null)}\n              disabled=\"\"\n              className=\"btn navbar-btn btn-outline-light \"\n              value=\"Retour aux posts\"\n            />\n          ) : null}\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"sidebar-container laptop\">\n          <div className=\"sidebar\">\n            {!userProfile && !myProfile ? (\n              <Button\n                onClick={() => setMyProfile(auth.user.id)}\n                disabled=\"\"\n                className=\"btn sidebar-btn btn-outline-light \"\n                value=\"Mon Profil\"\n              />\n            ) : null}\n\n            {userProfile ? (\n              <Button\n                onClick={() => setMyProfile(null)}\n                disabled=\"disabled\"\n                className=\"btn sidebar-btn btn-outline-light \"\n                value=\"Retour aux posts\"\n              />\n            ) : null}\n\n            {myProfile ? (\n              <Button\n                onClick={() => setMyProfile(null)}\n                disabled=\"\"\n                className=\"btn sidebar-btn btn-outline-light \"\n                value=\"Retour aux posts\"\n              />\n            ) : null}\n          </div>\n        </div>\n\n        <div className=\"section-container\">\n          {myProfile ? <Layout myProfile={true} /> : null}\n          {userProfile ? <Layout userProfile={true} /> : null}\n          {!userProfile && !myProfile ? <Layout /> : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\LogIn\\index.js",["110"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"../SubComponents/Form/index.js\";\nimport logo from \"../../icons/icon-c.png\";\nimport { UserContext } from \"../../App.js\";\n\nfunction LogIn() {\n  const auth = useContext(UserContext);\n  const [redirectToHome, setRedirectToHome] = useState(false);\n\n  const getRedirectToHome = () => {\n    if (auth?.user) {\n      setRedirectToHome(true);\n    }\n  };\n\n  useEffect(() => {\n    getRedirectToHome();\n  }, [auth, redirectToHome]);\n\n  return redirectToHome ? (\n    <Redirect to={{ pathname: \"/\" }} />\n  ) : (\n    <div className=\"login-container\">\n      <header className=\"login-header\">\n        <div className=\"login-container-title\">\n          <img className=\"login-logo\" src={logo} alt=\"groupomania-logo\" />\n          <h1 className=\"login-title\">Groupomania</h1>\n        </div>\n        <p className=\"login-subtitle\">Votre nouveau réseau d'entreprise</p>\n      </header>\n      <div className=\"form-container\">\n        <Form logIn={true} />\n        <Form signIn={true} />\n      </div>\n    </div>\n  );\n}\n\nexport default LogIn;\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\FetchData\\Users\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\Sidebar\\index.js",["111"],"import React, { useState } from \"react\";\r\nimport Button from \"../../SubComponents/Button/index\";\r\nimport Form from \"../../SubComponents/Form/index\";\r\nimport { deleteUser } from \"../../Utils/FetchData/Users/index.js\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  const [redirectToLogin, setRedirectToLogin] = useState(false);\r\n  const [dropdownUpdateProfile, setDropdownUpdateProfile] = useState(false);\r\n  const [dropdownUpdateInfos, setDropdownUpdateInfos] = useState(false);\r\n  const [dropdownUpdatePassword, setDropdownUpdatePassword] = useState(false);\r\n  const [deleteProfile, setDeleteProfile] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setRedirectToLogin(true);\r\n  };\r\n\r\n  const confirmDeleteProfile = async () => {\r\n    await deleteUser(token);\r\n    logout();\r\n  };\r\n\r\n  return redirectToLogin ? (\r\n    <Redirect to={{ pathname: \"/login\" }} />\r\n  ) : (\r\n    <div className=\"sidebar\">\r\n      <div className=\"container-btn-profile\">\r\n        <Button\r\n          onClick={() => setDropdownUpdateProfile(!dropdownUpdateProfile)}\r\n          disabled=\"\"\r\n          className=\"btn sidebar-btn btn-outline-light \"\r\n          value=\"Mon Profil\"\r\n        />\r\n        {dropdownUpdateProfile ? (\r\n          <div>\r\n            <Button\r\n              onClick={() => setDropdownUpdateInfos(!dropdownUpdateInfos)}\r\n              disabled=\"\"\r\n              className=\"btn sub-sidebar-btn btn-light \"\r\n              value=\"Modifier vos informations générales\"\r\n            />\r\n            {dropdownUpdateInfos ? <Form updateUserInfos={true} /> : null}\r\n\r\n            <Button\r\n              onClick={() => setDropdownUpdatePassword(!dropdownUpdatePassword)}\r\n              disabled=\"\"\r\n              className=\"btn sub-sidebar-btn btn-light \"\r\n              value=\"Modifier votre mot de passe\"\r\n            />\r\n\r\n            {dropdownUpdatePassword ? <Form updateUserPassword={true} /> : null}\r\n\r\n            <Button\r\n              onClick={() => setDeleteProfile(!deleteProfile)}\r\n              disabled=\"\"\r\n              className=\"btn sub-sidebar-btn btn-light \"\r\n              value=\"Supprimer votre profil\"\r\n            />\r\n\r\n            {deleteProfile ? (\r\n              <div>\r\n                <Button\r\n                  onClick={() => setDeleteProfile(!deleteProfile)}\r\n                  disabled=\"\"\r\n                  className=\"btn sub-sidebar-btn btn-danger \"\r\n                  value=\"Confirmer la suppression de votre profil\"\r\n                />\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <div className=\"container-btn-logout\">\r\n        <Button\r\n          onClick={logout}\r\n          disabled=\"\"\r\n          className=\"btn sidebar-btn btn-outline-light bouton\"\r\n          value=\"Deconnexion\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n",["112","113"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Input\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Button\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\User\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\DecodeToken\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\FetchData\\Posts\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\FetchData\\Comments\\index.js",[],["114","115"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Form\\index.js",["116","117"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Input from \"../Input/index.js\";\r\nimport Button from \"../Button/index.js\";\r\nimport Modal from \"../Modal/index.js\";\r\nimport { UserContext } from \"../../../App.js\";\r\nimport {\r\n  signUser,\r\n  logUser,\r\n  updateUserData,\r\n  updatePassword\r\n} from \"../../Utils/FetchData/Users/index\";\r\n\r\nconst Form = ({ signIn, logIn, updateUserInfos, updateUserPassword }) => {\r\n  const auth = useContext(UserContext);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const [errorLogin, setErrorLogin] = useState(false);\r\n  const [errorSignup, setErrorSignup] = useState(false);\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [validFirstName, setValidFirstName] = useState(false);\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [validLastName, setValidLastName] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [validEmailLog, setValidEmailLog] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [validPassword, setValidPassword] = useState(false);\r\n  const [validPasswordLog, setValidPasswordLog] = useState(false);\r\n\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [validNewPassword, setValidNewPassword] = useState(false);\r\n\r\n  const [update, setUpdate] = useState(false);\r\n  const [confirmUpdatePassword, setConfirmUpdatePassword] = useState(false);\r\n\r\n  const [msgError, setMsgError] = useState(null);\r\n\r\n  const emailReg = new RegExp(/^([\\w-\\.]+)@((?:[\\w]+\\.)+)([a-zA-Z]{2,4})/);\r\n  const passwordReg = new RegExp(/^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/);\r\n\r\n  function handleChangeFirstname(event) {\r\n    setFirstName(event.target.value);\r\n    setValidFirstName(event.target.value !== \"\" ? true : false);\r\n  }\r\n\r\n  function handleChangeLastname(event) {\r\n    setLastName(event.target.value);\r\n    setValidLastName(event.target.value !== \"\" ? true : false);\r\n  }\r\n\r\n  function handleChangeEmail(event) {\r\n    setEmail(event.target.value);\r\n    setValidEmailLog(event.target.value !== \"\" ? true : false);\r\n    setValidEmail(emailReg.test(event.target.value) ? true : false);\r\n  }\r\n\r\n  function handleChangePassword(event) {\r\n    setPassword(event.target.value);\r\n    setValidPasswordLog(event.target.value !== \"\" ? true : false);\r\n    setValidPassword(passwordReg.test(event.target.value) ? true : false);\r\n  }\r\n\r\n  function handleChangeNewPassword(event) {\r\n    setNewPassword(event.target.value);\r\n    setValidNewPassword(passwordReg.test(event.target.value) ? true : false);\r\n  }\r\n\r\n  const login = async () => {\r\n    try {\r\n      const result = await logUser(email, password);\r\n      if (result) {\r\n        auth.setUser(result.data.user);\r\n        localStorage.setItem(\"token\", result.data.token);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      setErrorLogin(true);\r\n    }\r\n  };\r\n\r\n  const signup = async () => {\r\n    try {\r\n      const result = await signUser(firstName, lastName, email, password);\r\n\r\n      if (result) {\r\n        auth.setUser(result.data.user);\r\n        localStorage.setItem(\"token\", result.data.token);\r\n      }\r\n    } catch (error) {\r\n      setErrorSignup(error.response.data.error);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const confirmUpdateProfile = () => {\r\n    setUpdate(!update);\r\n  };\r\n\r\n  const updateProfile = async () => {\r\n    try {\r\n      const result = await updateUserData(firstName, lastName, email, token);\r\n      if (result) {\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      console.log(error.userFound);\r\n    }\r\n  };\r\n\r\n  const updateNewPassword = async () => {\r\n    try {\r\n      const result = await updatePassword(password, newPassword, token);\r\n      if (result) {\r\n        window.location.reload();\r\n        console.log(\"Le mot de passe a bien été modifié\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error.response.data.error);\r\n      setMsgError(error.response.data.error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={\r\n        updateUserInfos || updateUserPassword\r\n          ? \"update-form\"\r\n          : logIn || signIn\r\n          ? \"form-log-sign\"\r\n          : null\r\n      }\r\n    >\r\n      {update ? (\r\n        <Modal\r\n          fisrtNameBefore={auth.user.firstName}\r\n          fisrtNameAfter={firstName}\r\n          lastNameBefore={auth.user.lastName}\r\n          lastNameAfter={lastName}\r\n          emailBefore={auth.user.email}\r\n          emailAfter={email}\r\n          onclickYes={updateProfile}\r\n          onclickCancel={confirmUpdateProfile}\r\n        />\r\n      ) : null}\r\n\r\n      {signIn ? (\r\n        <div>\r\n          <div>\r\n            <p>\r\n              Vous n'avez pas encore de compte ?<br />\r\n              Inscrivez-vous !\r\n            </p>\r\n          </div>\r\n          <Input\r\n            name=\"Prénom\"\r\n            onChange={handleChangeFirstname}\r\n            value={firstName}\r\n          />\r\n\r\n          <Input name=\"Nom\" onChange={handleChangeLastname} value={lastName} />\r\n          <Input name=\"Email\" onChange={handleChangeEmail} value={email} />\r\n\r\n          {email && !validEmail ? (\r\n            <p className=\"msgInvalid\">Cet email n'est pas valide</p>\r\n          ) : null}\r\n          {validEmail ? <p className=\"msgValid\">Cet email est valide</p> : null}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"Mot de passe\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n          />\r\n\r\n          {password && !validPassword ? (\r\n            <p className=\"msgInvalid\">\r\n              Le mot de passe doit contenir 8 caractères au minimum, un chiffre\r\n              et un lettre\r\n            </p>\r\n          ) : null}\r\n          {validPassword ? (\r\n            <p className=\"msgValid\">Ce mot de passe est valide</p>\r\n          ) : null}\r\n\r\n          <Button\r\n            onClick={signup}\r\n            disabled={\r\n              validPassword &&\r\n              validEmail &&\r\n              validFirstName &&\r\n              validLastName === true\r\n                ? \"\"\r\n                : \"disabled\"\r\n            }\r\n            className=\"btn btn-outline-primary btn-form\"\r\n          />\r\n\r\n          {errorSignup ? <p className=\"msgInvalid\">{errorSignup}</p> : null}\r\n        </div>\r\n      ) : null}\r\n\r\n      {logIn ? (\r\n        <div>\r\n          <div>\r\n            <p>\r\n              Vous êtes déjà inscrit ?<br />\r\n              Connectez-vous !\r\n            </p>\r\n          </div>\r\n          <Input name=\"Email\" onChange={handleChangeEmail} value={email} />\r\n\r\n          <Input\r\n            name=\"Mot de passe\"\r\n            type=\"password\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n          />\r\n\r\n          <Button\r\n            onClick={login}\r\n            disabled={\r\n              validPasswordLog && validEmailLog === true ? \"\" : \"disabled\"\r\n            }\r\n            className=\"btn btn-outline-primary btn-form\"\r\n          />\r\n          {errorLogin ? (\r\n            <p className=\"msgInvalid\">Ces informations sont erronées</p>\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n\r\n      {updateUserInfos ? (\r\n        <div>\r\n          <div className=\"form-update\">\r\n            <Input\r\n              name={auth.user.firstName}\r\n              onChange={handleChangeFirstname}\r\n              value={firstName}\r\n            />\r\n            <Input\r\n              name={auth.user.lastName}\r\n              onChange={handleChangeLastname}\r\n              value={lastName}\r\n            />\r\n            <Input\r\n              type=\"email\"\r\n              name={auth.user.email}\r\n              onChange={handleChangeEmail}\r\n              value={email}\r\n            />\r\n            {email && !validEmail ? (\r\n              <p className=\"msgInvalid\">Cet email n'est pas valide</p>\r\n            ) : null}\r\n            {validEmail ? (\r\n              <p className=\"msgValidSidebar\">Cet email est valide</p>\r\n            ) : null}\r\n            <Button\r\n              className=\"btn btn-outline-primary btn-form\"\r\n              onClick={confirmUpdateProfile}\r\n              disabled={\r\n                validEmail && validFirstName && validLastName === true\r\n                  ? \"\"\r\n                  : \"disabled\"\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {updateUserPassword ? (\r\n        <div className=\"form-update\">\r\n          <Input\r\n            type=\"password\"\r\n            name=\"Mot de passe actuel\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            name=\"Nouveau mot de passe\"\r\n            onChange={handleChangeNewPassword}\r\n            value={newPassword}\r\n          />\r\n\r\n          {confirmUpdatePassword ? (\r\n            <Button\r\n              className=\"btn btn-outline-danger btn-form\"\r\n              onClick={updateNewPassword}\r\n              disabled={validPassword && validNewPassword ? \"\" : \"disabled\"}\r\n              value=\"Confirmer la modification du mot de passe\"\r\n            />\r\n          ) : (\r\n            <Button\r\n              className=\"btn btn-outline-primary btn-form\"\r\n              onClick={() => setConfirmUpdatePassword(true)}\r\n              disabled={validPassword && validNewPassword ? \"\" : \"disabled\"}\r\n            />\r\n          )}\r\n\r\n          {msgError ? <p>{msgError}</p> : null}\r\n        </div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\PrivateRoute\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Utils\\Page404\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Modal\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Moderate\\index.js",["118"],"import React from \"react\";\r\nimport \"./Moderate.css\";\r\nimport Button from \"../Button/index\";\r\n\r\n// const Moderate = ({ onClick }) => {\r\n//   return (\r\n//     <i onClick={onClick} className=\"btn-moderate far fa-times-circle fa-2x\"></i>\r\n//   );\r\n// };\r\n\r\nconst Moderate = () => {\r\n  return <i className=\"btn-moderate far fa-times-circle fa-2x\"></i>;\r\n};\r\nexport default Moderate;\r\n",["119","120"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Textarea\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\MyProfile\\index.js",["121","122","123","124","125","126","127","128","129"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\SubComponents\\Myprofile\\index.js",["130","131","132","133","134","135","136","137"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport Button from \"../Button/index\";\r\nimport Form from \"../Form/index\";\r\nimport User from \"../User/index\";\r\nimport Comments from \"../../Home/Posts/Comments/index.js\";\r\nimport {\r\n  getPosts,\r\n  postPost,\r\n  updatePost,\r\n  getUserPosts\r\n} from \"../../Utils/FetchData/Posts/index\";\r\n\r\nimport { UserContext } from \"../../../App.js\";\r\nimport { Redirect, useParams } from \"react-router\";\r\n\r\nconst Myprofile = () => {\r\n  const auth = useContext(UserContext);\r\n  const [redirectToHome, setRedirectToHome] = useState(null);\r\n  const [modifyInfos, setModifyInfos] = useState(null);\r\n  const [modifyPassword, setModifyPassword] = useState(null);\r\n\r\n  return redirectToHome ? (\r\n    <Redirect to={{ pathname: \"/\" }} />\r\n  ) : (\r\n    <div>\r\n      <div>\r\n        <div>\r\n          <Button\r\n            onClick={() => setRedirectToHome(true)}\r\n            disabled=\"\"\r\n            className=\"btn btn-outline-primary bouton btn-seecreatingpost\"\r\n            value=\"Retour à tous les posts\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"container-btn-profile\">\r\n          <Button\r\n            onClick={() => setModifyInfos(!modifyInfos)}\r\n            disabled=\"\"\r\n            className=\"btn sub-sidebar-btn btn-outline-primary \"\r\n            value=\"Modifier vos informations générales\"\r\n          />\r\n          <Button\r\n            onClick={() => setModifyPassword(!modifyPassword)}\r\n            disabled=\"\"\r\n            className=\"btn sub-sidebar-btn btn-light \"\r\n            value=\"Modifier votre mot de passe\"\r\n          />\r\n          <Button\r\n            // onClick={() => setDeleteProfile(!deleteProfile)}\r\n            disabled=\"\"\r\n            className=\"btn sub-sidebar-btn btn-light \"\r\n            value=\"Supprimer votre profil\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          {modifyInfos ? <Form updateUserInfos={true} /> : null}\r\n          {modifyPassword ? <Form updateUserPassword={true} /> : null}\r\n\r\n          <div className=\"profile-infos\">\r\n            <p className=\"infos-title\">Prénom</p>\r\n            <p> {auth.user.firstName}</p>\r\n          </div>\r\n          <div className=\"profile-infos\">\r\n            <p className=\"infos-title\">Nom</p>\r\n            <p> {auth.user.lastName}</p>\r\n          </div>\r\n          <div className=\"profile-infos\">\r\n            <p className=\"infos-title\">Email</p>\r\n            <p> {auth.user.email}</p>\r\n            <p> {auth.user.active}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Myprofile;\r\n",["138","139"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\Layout\\index.js",["140","141","142","143","144"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Comments from \"./Comments/index.js\";\r\nimport Input from \"../../SubComponents/Input/index\";\r\nimport Textarea from \"../../SubComponents/Textarea/index\";\r\nimport User from \"../../SubComponents/User/index\";\r\nimport decodedToken from \"../../Utils/DecodeToken/index\";\r\nimport Button from \"../../SubComponents/Button/index\";\r\nimport Form from \"../../SubComponents/Form/index\";\r\nimport { deleteUser } from \"../../Utils/FetchData/Users/index.js\";\r\nimport Modal from \"../../SubComponents/Modal/index.js\";\r\n\r\nimport { UserContext } from \"../../../App.js\";\r\nimport {\r\n  getPosts,\r\n  postPost,\r\n  updatePost,\r\n  getUserPosts\r\n} from \"../../Utils/FetchData/Posts/index\";\r\nimport { getUser, updateProfile } from \"../../Utils/FetchData/Users/index\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\n\r\nconst Layout = ({ userProfile, myProfile }) => {\r\n  const userId = useParams();\r\n\r\n  const auth = useContext(UserContext); // auth Context\r\n\r\n  const token = localStorage.getItem(\"token\"); // token localStorage\r\n\r\n  // if userProfile/myProfile is true\r\n  const [user, setUser] = useState(\"\"); // Stock les valeurs du user selectionné par le modérateur\r\n  const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n  // Concernant redirection vers login\r\n  const [redirectToLogin, setRedirectToLogin] = useState(false); // redirection si pas de token\r\n\r\n  // Les posts qui apparaissent (deux possibiltié : tout les posts, ou les posts d'un seul utilisateur)\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // Concernant toutes les logiques pour déployer des fenêtres\r\n  const [dropdownCreatePost, setDropdownCreatePost] = useState(false); // faire apparaitre création de poste\r\n  const [dropdownUpdateInfos, setDropdownUpdateInfos] = useState(false);\r\n  const [dropdownUpdatePassword, setDropdownUpdatePassword] = useState(false);\r\n  const [deleteProfile, setDeleteProfile] = useState(false);\r\n\r\n  // Concernant posts\r\n  const [postTitle, setPostTitle] = useState(\"\"); // titre du post\r\n  const [postContent, setPostContent] = useState(\"\"); // contenu du post\r\n  const [validPostTitle, setValidPostTitle] = useState(false); // regex titre du post\r\n  const [validPostContent, setValidPostContent] = useState(false); // regex contenu du post\r\n  const [majPost, setMajPost] = useState(false); // ajout ou modération d'un post\r\n\r\n  // Pour le modérateur, stock l'id de l'utilisateur que l'on veut visionner, puis passe cette valeur dans la props de posts\r\n  const [profile, setProfile] = useState(false); //\r\n\r\n  // gestion d'événements des inputs\r\n  const handleChangePostTitle = event => {\r\n    setPostTitle(event.target.value);\r\n    setValidPostTitle(event.target.value !== \"\" ? true : false);\r\n  };\r\n  const handleChangePostContent = event => {\r\n    setPostContent(event.target.value);\r\n    setValidPostContent(event.target.value !== \"\" ? true : false);\r\n  };\r\n\r\n  // On utilise cette fonction avant chaque reqûete vers le backend afin d'éviter une erreur serveur si token est expiré\r\n  const getRedirectToLogin = () => {\r\n    const decode = decodedToken();\r\n    if (!decode) {\r\n      setRedirectToLogin(true);\r\n      auth.setUser(null);\r\n    }\r\n  };\r\n\r\n  // get + set posts : deux options, userProfile est true or not\r\n  const fetchPosts = async () => {\r\n    if (userProfile) {\r\n      const resultPosts = await getUserPosts(token, userId.id);\r\n      const resultUser = await getUser(token, userId.id);\r\n      setUser(resultUser.data.userFound);\r\n      setPosts(resultPosts.data.allPosts);\r\n      setProfile(false);\r\n    } else if (myProfile) {\r\n      const result = await getUserPosts(token, auth.user.id);\r\n      setUser(auth.user);\r\n      setPosts(result.data.allPosts);\r\n    } else {\r\n      const result = await getPosts(token);\r\n      setPosts(result.data.allPosts);\r\n      setRedirectToHome(false);\r\n    }\r\n  };\r\n\r\n  // Création d'un post\r\n  const creatingPost = async () => {\r\n    getRedirectToLogin();\r\n    const decode = decodedToken();\r\n    if (decode) {\r\n      try {\r\n        await postPost(postTitle, postContent, token);\r\n        setMajPost(!majPost);\r\n        setPostTitle(\"\");\r\n        setPostContent(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      console.log(\"Votre session a expiré\");\r\n    }\r\n  };\r\n\r\n  // Modération d'un post\r\n  const moderatePost = async postId => {\r\n    await updatePost(token, postId);\r\n    setMajPost(true);\r\n  };\r\n\r\n  // Modération d'un profil en tant que modérator\r\n  const moderateProfile = async userId => {\r\n    await updateProfile(token, userId);\r\n    setRedirectToHome(true);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    setRedirectToLogin(true);\r\n  };\r\n\r\n  const confirmDeleteProfile = async () => {\r\n    await deleteUser(token);\r\n    logout();\r\n  };\r\n\r\n  // Fonction useEffect\r\n  useEffect(() => {\r\n    getRedirectToLogin();\r\n    const decode = decodedToken();\r\n    if (decode) {\r\n      fetchPosts();\r\n    }\r\n  }, [majPost, userProfile, myProfile]);\r\n\r\n  return redirectToLogin ? (\r\n    <Redirect to={{ pathname: \"/login\" }} />\r\n  ) : profile ? (\r\n    <Redirect to={{ pathname: `/profile/${profile}` }} />\r\n  ) : redirectToHome ? (\r\n    <Redirect to={{ pathname: \"/\" }} />\r\n  ) : (\r\n    <div className=\"container\">\r\n      {auth?.user.tuto ? <Modal infos={true} /> : null}\r\n      {!userProfile && !myProfile ? (\r\n        <Button\r\n          onClick={() => setDropdownCreatePost(!dropdownCreatePost)}\r\n          disabled=\"\"\r\n          className=\"btn btn-outline-primary bouton \"\r\n          value=\"Créer un post\"\r\n        />\r\n      ) : null}\r\n\r\n      {dropdownCreatePost ? (\r\n        <div className=\"container-form-create-post\">\r\n          <Input\r\n            type=\"text\"\r\n            name=\"Titre du post\"\r\n            onChange={handleChangePostTitle}\r\n            value={postTitle}\r\n          />\r\n          <Textarea\r\n            type=\"text\"\r\n            name=\"Contenu du post\"\r\n            onChange={handleChangePostContent}\r\n            value={postContent}\r\n          />\r\n          <Button\r\n            onClick={creatingPost}\r\n            disabled=\"\"\r\n            className=\"btn btn-outline-primary btn-form\"\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      {userProfile ? (\r\n        <Button\r\n          onClick={() => setRedirectToHome(true)}\r\n          disabled=\"\"\r\n          className=\"btn btn-outline-primary bouton btn-seecreatingpost\"\r\n          value=\"Retour à tout les posts\"\r\n        />\r\n      ) : null}\r\n\r\n      {userProfile || myProfile ? (\r\n        <div className=\"container-profile-form\">\r\n          {!dropdownUpdateInfos && !dropdownUpdatePassword && !deleteProfile ? (\r\n            <div className=\"container-profile-infos\">\r\n              {auth.user.moderator ? (\r\n                <div className=\"profile-infos\">\r\n                  <p className=\"infos-title\">Identifiant</p>\r\n                  <p> {user.id}</p>\r\n                </div>\r\n              ) : null}\r\n\r\n              <div className=\"profile-infos\">\r\n                <p className=\"infos-title\">Prénom</p>\r\n                <p> {user.firstName}</p>\r\n              </div>\r\n              <div className=\"profile-infos\">\r\n                <p className=\"infos-title\">Nom</p>\r\n                <p> {user.lastName}</p>\r\n              </div>\r\n              <div className=\"profile-infos\">\r\n                <p className=\"infos-title\">Email</p>\r\n                <p> {user.email}</p>\r\n                <p> {user.active}</p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              {dropdownUpdateInfos ? <Form updateUserInfos={true} /> : null}\r\n              {dropdownUpdatePassword ? (\r\n                <Form updateUserPassword={true} />\r\n              ) : null}\r\n            </div>\r\n          )}\r\n\r\n          {myProfile ? (\r\n            <div className=\"buttons-profile\">\r\n              <Button\r\n                onClick={() => setDropdownUpdateInfos(!dropdownUpdateInfos)}\r\n                disabled=\"\"\r\n                className=\"btn sub-sidebar-btn btn-outline-primary\"\r\n                value=\"Modifier vos informations générales\"\r\n              />\r\n              <Button\r\n                onClick={() =>\r\n                  setDropdownUpdatePassword(!dropdownUpdatePassword)\r\n                }\r\n                disabled=\"\"\r\n                className=\"btn sub-sidebar-btn btn-outline-primary \"\r\n                value=\"Modifier votre mot de passe\"\r\n              />\r\n\r\n              <Button\r\n                onClick={logout}\r\n                disabled=\"\"\r\n                className=\"btn sub-sidebar-btn btn-outline-primary \"\r\n                value=\"Deconnexion\"\r\n              />\r\n\r\n              {myProfile && !auth.user.moderator ? (\r\n                <Button\r\n                  onClick={confirmDeleteProfile}\r\n                  disabled=\"\"\r\n                  className=\"btn sub-sidebar-btn btn-outline-danger \"\r\n                  value=\"Supprimer le profil\"\r\n                />\r\n              ) : null}\r\n            </div>\r\n          ) : null}\r\n\r\n          {userProfile ? (\r\n            <Button\r\n              onClick={() => moderateProfile(userId.id)}\r\n              disabled=\"\"\r\n              className=\"btn sub-sidebar-btn btn-outline-danger \"\r\n              value=\"Supprimer le profil\"\r\n            />\r\n          ) : null}\r\n        </div>\r\n      ) : null}\r\n\r\n      {posts.length > 0 ? (\r\n        <div>\r\n          {posts.map(post => (\r\n            <div key={post.id} id={post.id} className=\"card\">\r\n              <div className=\"card-body\">\r\n                <div className=\"card-header row\">\r\n                  <h6 className=\"post-user col-4 col-12-xs\">\r\n                    {auth?.user.moderator &&\r\n                    post.userId != auth.user.id &&\r\n                    !userProfile ? (\r\n                      <Button\r\n                        className=\"btn btn-outline-primary btn-post\"\r\n                        disabled=\"\"\r\n                        onClick={() => setProfile(post.userId)}\r\n                        value={<User id={post.userId} />}\r\n                      />\r\n                    ) : (\r\n                      <User id={post.userId} />\r\n                    )}\r\n                  </h6>\r\n\r\n                  <h6 className=\"post-title col-4 col-xs-12\">\r\n                    {post.titlePost}\r\n                  </h6>\r\n\r\n                  {auth?.user.moderator ? (\r\n                    <div className=\"container-moderate\">\r\n                      <i\r\n                        onClick={() => moderatePost(post.id)}\r\n                        className=\"btn-moderate far fa-times-circle fa-2x\"\r\n                      ></i>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n\r\n                <div className=\"line\"></div>\r\n\r\n                <p className=\"post-content\">{post.content}</p>\r\n\r\n                <div className=\"line\"></div>\r\n\r\n                <div>\r\n                  <Comments postId={post.id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"msg-no-post\">Vous n'avez créer aucun post</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\Layout\\Comments\\index.js",["145"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  getComments,\r\n  updateComment\r\n} from \"../../../Utils/FetchData/Comments/index\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport User from \"../../../SubComponents/User/index\";\r\nimport Button from \"../../../SubComponents/Button/index\";\r\nimport { UserContext } from \"../../../../App.js\";\r\nimport decodedToken from \"../../../Utils/DecodeToken/index\";\r\nimport { postComments } from \"../../../Utils/FetchData/Comments/index.js\";\r\nimport Textarea from \"../../../SubComponents/Textarea/index\";\r\nimport Modal from \"../../../SubComponents/Modal/index\";\r\n\r\nconst Comments = ({ postId }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const auth = useContext(UserContext); // auth Context\r\n\r\n  const [comments, setComments] = useState([]); // stock les commentaires\r\n  const [majComment, setMajComment] = useState(false); // modération d'un post\r\n\r\n  const [modalModerateComment, setModalModerateComment] = useState(false); // faire apparaitre création de poste\r\n\r\n  const [redirectToLogin, setRedirectToLogin] = useState(false); // redirection si pas de token\r\n\r\n  // Concernant comments\r\n  const [dropdownComments, setDropdownComments] = useState(false); // faire apparaitre création de commentaire et commentaires\r\n  const [commentContent, setCommentContent] = useState(\"\"); // contenu du commentaire\r\n  const [validCommentContent, setValidCommentContent] = useState(false); // regex contenu du commentaire\r\n\r\n  const fetchComments = async () => {\r\n    const result = await getComments(token, postId);\r\n    if (result) {\r\n      setComments(result.data.postComments);\r\n    }\r\n  };\r\n\r\n  // gestion d'evenement de l'input\r\n  const handleChangeCommentContent = event => {\r\n    setCommentContent(event.target.value);\r\n    setValidCommentContent(event.target.value !== \"\" ? true : false);\r\n  };\r\n\r\n  // Création d'un commentaire\r\n  const creatingComment = async postId => {\r\n    getRedirectToLogin();\r\n    const decode = decodedToken();\r\n    if (decode) {\r\n      try {\r\n        let userId = auth.user.id;\r\n        await postComments(token, userId, postId, commentContent);\r\n        setMajComment(!majComment);\r\n        setCommentContent(\"\");\r\n        console.log(\"Le commentaire a bien été créé\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      console.log(\"Votre session a expiré\");\r\n    }\r\n  };\r\n\r\n  // Modération d'un commentaire\r\n  const moderateComment = async commentId => {\r\n    await updateComment(token, commentId);\r\n    setMajComment(!majComment);\r\n    setModalModerateComment(false);\r\n  };\r\n\r\n  // redirection à la page de connexion si token inexistant ou expiré\r\n  const getRedirectToLogin = () => {\r\n    const decode = decodedToken();\r\n    if (!decode) {\r\n      setRedirectToLogin(true);\r\n      auth.setUser(null);\r\n    }\r\n  };\r\n\r\n  // gestion de dropdownComments\r\n  const seeComments = postId => {\r\n    if (dropdownComments === postId) {\r\n      setDropdownComments(false);\r\n    } else {\r\n      setDropdownComments(postId);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchComments();\r\n  }, [majComment]);\r\n\r\n  return redirectToLogin ? (\r\n    <Redirect to={{ pathname: \"/login\" }} />\r\n  ) : (\r\n    <div>\r\n      {modalModerateComment ? (\r\n        <Modal\r\n          sidebar={true}\r\n          title=\"Suppression d'un commentaire\"\r\n          content=\"Vous êtes sur le point de supprimer un commentaire, êtes vous sur ?\"\r\n        />\r\n      ) : null}\r\n      <Button\r\n        className=\"btn btn-outline-primary btn-see-comments\"\r\n        disabled=\"\"\r\n        value=\"Commentaires\"\r\n        onClick={() => seeComments(postId)}\r\n      />\r\n      {dropdownComments && dropdownComments === postId ? (\r\n        <div>\r\n          <div>\r\n            <div>\r\n              {comments.map(comment => (\r\n                <div className=\"comment\" id={comment.id} key={comment.id}>\r\n                  <div className=\"comment-user\">\r\n                    <User id={comment.userId} />\r\n                  </div>\r\n                  <div className=\"comment-content\">{comment.content}</div>\r\n                  {auth?.user.moderator ? (\r\n                    <div className=\"container-moderate\">\r\n                      <i\r\n                        onClick={() => moderateComment(comment.id)}\r\n                        className=\"btn-moderate-comment far fa-times-circle fa-2x\"\r\n                      ></i>\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"comments row\">\r\n              <div className=\"col-9\">\r\n                <Textarea\r\n                  className=\"input-newComment form-control\"\r\n                  name=\"Commenter ce post\"\r\n                  onChange={handleChangeCommentContent}\r\n                  value={commentContent}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-3\">\r\n                <Button\r\n                  className=\"btn btn-outline-primary btn-new-comment\"\r\n                  onClick={() => creatingComment(postId)}\r\n                  disabled={validCommentContent ? \"\" : \"disabled\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n",{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":29,"nodeType":"152","messageId":"153","endLine":1,"endColumn":38},{"ruleId":"154","severity":1,"message":"155","line":19,"column":6,"nodeType":"156","endLine":19,"endColumn":28,"suggestions":"157"},{"ruleId":"150","severity":1,"message":"158","line":20,"column":9,"nodeType":"152","messageId":"153","endLine":20,"endColumn":29},{"ruleId":"146","replacedBy":"159"},{"ruleId":"148","replacedBy":"160"},{"ruleId":"146","replacedBy":"161"},{"ruleId":"148","replacedBy":"162"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":39,"nodeType":"152","messageId":"153","endLine":1,"endColumn":48},{"ruleId":"163","severity":1,"message":"164","line":38,"column":38,"nodeType":"165","messageId":"166","endLine":38,"endColumn":39,"suggestions":"167"},{"ruleId":"150","severity":1,"message":"168","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":14},{"ruleId":"146","replacedBy":"169"},{"ruleId":"148","replacedBy":"170"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":29,"nodeType":"152","messageId":"153","endLine":1,"endColumn":38},{"ruleId":"150","severity":1,"message":"171","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":12},{"ruleId":"150","severity":1,"message":"172","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":16},{"ruleId":"150","severity":1,"message":"173","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":11},{"ruleId":"150","severity":1,"message":"174","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":11},{"ruleId":"150","severity":1,"message":"175","line":9,"column":3,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},{"ruleId":"150","severity":1,"message":"176","line":10,"column":3,"nodeType":"152","messageId":"153","endLine":10,"endColumn":15},{"ruleId":"150","severity":1,"message":"177","line":14,"column":10,"nodeType":"152","messageId":"153","endLine":14,"endColumn":19},{"ruleId":"150","severity":1,"message":"178","line":18,"column":10,"nodeType":"152","messageId":"153","endLine":18,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":1,"column":29,"nodeType":"152","messageId":"153","endLine":1,"endColumn":38},{"ruleId":"150","severity":1,"message":"171","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":12},{"ruleId":"150","severity":1,"message":"172","line":5,"column":8,"nodeType":"152","messageId":"153","endLine":5,"endColumn":16},{"ruleId":"150","severity":1,"message":"173","line":7,"column":3,"nodeType":"152","messageId":"153","endLine":7,"endColumn":11},{"ruleId":"150","severity":1,"message":"174","line":8,"column":3,"nodeType":"152","messageId":"153","endLine":8,"endColumn":11},{"ruleId":"150","severity":1,"message":"175","line":9,"column":3,"nodeType":"152","messageId":"153","endLine":9,"endColumn":13},{"ruleId":"150","severity":1,"message":"176","line":10,"column":3,"nodeType":"152","messageId":"153","endLine":10,"endColumn":15},{"ruleId":"150","severity":1,"message":"177","line":14,"column":20,"nodeType":"152","messageId":"153","endLine":14,"endColumn":29},{"ruleId":"146","replacedBy":"179"},{"ruleId":"148","replacedBy":"180"},{"ruleId":"150","severity":1,"message":"181","line":43,"column":25,"nodeType":"152","messageId":"153","endLine":43,"endColumn":41},{"ruleId":"150","severity":1,"message":"182","line":48,"column":10,"nodeType":"152","messageId":"153","endLine":48,"endColumn":24},{"ruleId":"150","severity":1,"message":"183","line":49,"column":10,"nodeType":"152","messageId":"153","endLine":49,"endColumn":26},{"ruleId":"154","severity":1,"message":"184","line":140,"column":6,"nodeType":"156","endLine":140,"endColumn":39,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":279,"column":33,"nodeType":"188","messageId":"189","endLine":279,"endColumn":35},{"ruleId":"154","severity":1,"message":"190","line":90,"column":6,"nodeType":"156","endLine":90,"endColumn":18,"suggestions":"191"},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRedirectToHome'. Either include it or remove the dependency array.","ArrayExpression",["194"],"'confirmDeleteProfile' is assigned a value but never used.",["192"],["193"],["192"],["193"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["195","196"],"'Button' is defined but never used.",["192"],["193"],"'User' is defined but never used.","'Comments' is defined but never used.","'getPosts' is defined but never used.","'postPost' is defined but never used.","'updatePost' is defined but never used.","'getUserPosts' is defined but never used.","'useParams' is defined but never used.","'redirectToHome' is assigned a value but never used.",["192"],["193"],"'setDeleteProfile' is assigned a value but never used.","'validPostTitle' is assigned a value but never used.","'validPostContent' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'fetchPosts' and 'getRedirectToLogin'. Either include them or remove the dependency array.",["197"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchComments'. Either include it or remove the dependency array.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"messageId":"201","fix":"202","desc":"203"},{"messageId":"204","fix":"205","desc":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},"Update the dependencies array to be: [auth, getRedirectToHome, redirectToHome]",{"range":"211","text":"212"},"removeEscape",{"range":"213","text":"214"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"215","text":"216"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [majPost, userProfile, myProfile, getRedirectToLogin, fetchPosts]",{"range":"217","text":"218"},"Update the dependencies array to be: [fetchComments, majComment]",{"range":"219","text":"220"},[522,544],"[auth, getRedirectToHome, redirectToHome]",[1546,1547],"",[1546,1546],"\\",[5007,5040],"[majPost, userProfile, myProfile, getRedirectToLogin, fetchPosts]",[3116,3128],"[fetchComments, majComment]"]