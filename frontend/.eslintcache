[{"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\index.js":"1","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\App.js":"3","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Comments\\index.js":"4","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\index.js":"5","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Form\\index.js":"6","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Button\\index.js":"7","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Input\\index.js":"8","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\LogIn\\index.js":"9","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Posts\\index.js":"10","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Sidebar\\index.js":"11","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\PrivateRoute\\index.js":"12","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\DecodeToken\\index.js":"13","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\FetchData\\Posts\\index.js":"14","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\FetchData\\Users\\index.js":"15","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\FetchData\\Comments\\index.js":"16","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\User\\index.js":"17","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Profile\\index.js":"18"},{"size":500,"mtime":1611165248700,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1609252129000,"results":"21","hashOfConfig":"20"},{"size":2339,"mtime":1615371902285,"results":"22","hashOfConfig":"20"},{"size":5198,"mtime":1615365168310,"results":"23","hashOfConfig":"20"},{"size":892,"mtime":1615193673958,"results":"24","hashOfConfig":"20"},{"size":7433,"mtime":1615378200617,"results":"25","hashOfConfig":"20"},{"size":427,"mtime":1612793843819,"results":"26","hashOfConfig":"20"},{"size":595,"mtime":1615364788511,"results":"27","hashOfConfig":"20"},{"size":1108,"mtime":1614326597530,"results":"28","hashOfConfig":"20"},{"size":9697,"mtime":1615369203860,"results":"29","hashOfConfig":"20"},{"size":2377,"mtime":1615307128266,"results":"30","hashOfConfig":"20"},{"size":625,"mtime":1615313631957,"results":"31","hashOfConfig":"20"},{"size":339,"mtime":1613552296606,"results":"32","hashOfConfig":"20"},{"size":990,"mtime":1613749522151,"results":"33","hashOfConfig":"20"},{"size":1580,"mtime":1615376051346,"results":"34","hashOfConfig":"20"},{"size":771,"mtime":1614673603149,"results":"35","hashOfConfig":"20"},{"size":624,"mtime":1615366909200,"results":"36","hashOfConfig":"20"},{"size":1324,"mtime":1614674356715,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"5mbk5g",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\index.js",[],["85","86"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\App.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Comments\\index.js",["87","88","89","90"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { getComments, updateComment } from \"../FetchData/Comments/index\";\r\nimport User from \"../User/index\";\r\nimport Button from \"../Button/index\";\r\nimport { UserContext } from \"../../App.js\";\r\nimport decodedToken from \"../DecodeToken/index\";\r\nimport { postComments } from \"../FetchData/Comments/index.js\";\r\nimport Input from \"../Input/index\";\r\n\r\nconst Comments = ({ postId }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const auth = useContext(UserContext); // auth Context\r\n  const [comments, setComments] = useState(null);\r\n  const [majComment, setMajComment] = useState(false); // modération d'un post\r\n  const [showModerateComment, setShowModerateComment] = useState(false); // faire apparaitre création de poste\r\n\r\n  const [redirect, setRedirect] = useState(false); // redirection si pas de token\r\n\r\n  // Concernant comments\r\n  const [showComments, setShowComments] = useState(false); // faire apparaitre création de commentaire et commentaires\r\n  const [newComment, setNewComment] = useState(false); // un nouveau commentaire est créé\r\n  const [commentContent, setCommentContent] = useState(\"\"); // contenu du commentaire\r\n  const [validCommentContent, setValidCommentContent] = useState(false); // regex contenu du commentaire\r\n\r\n  const getSetComments = async () => {\r\n    const result = await getComments(token, postId);\r\n    if (result) {\r\n      setComments(result.data.postComments);\r\n    }\r\n  };\r\n\r\n  const handleChangeCommentContent = event => {\r\n    setCommentContent(event.target.value);\r\n    setValidCommentContent(event.target.value !== \"\" ? true : false);\r\n  };\r\n\r\n  const creatingComment = async postId => {\r\n    getRedirect();\r\n    const decode = decodedToken();\r\n    if (decode) {\r\n      try {\r\n        let userId = auth.user.id;\r\n        const result = await postComments(\r\n          token,\r\n          userId,\r\n          postId,\r\n          commentContent\r\n        );\r\n        setNewComment(true);\r\n        console.log(\"Le commentaire a bien été créé\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      console.log(\"Votre session a expiré\");\r\n    }\r\n  };\r\n\r\n  const modalModerateComment = () => {\r\n    setShowModerateComment(!showModerateComment);\r\n  };\r\n\r\n  const moderateComment = async commentId => {\r\n    const result = await updateComment(token, commentId);\r\n    setMajComment(!majComment);\r\n    setShowModerateComment(!showModerateComment);\r\n  };\r\n\r\n  const getRedirect = () => {\r\n    const decode = decodedToken();\r\n    if (!decode) {\r\n      setRedirect(true);\r\n      auth.setUser(null);\r\n    }\r\n  };\r\n\r\n  const seeComments = postId => {\r\n    if (showComments === postId) {\r\n      setShowComments(false);\r\n    } else {\r\n      setShowComments(postId);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSetComments();\r\n  }, [newComment]);\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        className=\"btn btn-outline-primary btn-see-comments\"\r\n        disabled=\"\"\r\n        value=\"Commentaires\"\r\n        onClick={() => seeComments(postId)}\r\n      />\r\n      {showComments && showComments === postId ? (\r\n        <div>\r\n          <div>\r\n            <div>\r\n              {comments.map(comment => (\r\n                <div className=\"comment\" id={comment.id} key={comment.id}>\r\n                  <div className=\"comment-user\">\r\n                    <User id={comment.userId} />\r\n                  </div>\r\n                  <div>{comment.comm}</div>\r\n                  {auth?.user.moderator ? (\r\n                    <div>\r\n                      <Button\r\n                        className=\"btn btn-outline-primary btn-moderate-comment\"\r\n                        disabled=\"\"\r\n                        value=\"Modérer\"\r\n                        onClick={modalModerateComment}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n\r\n                  {showModerateComment ? (\r\n                    <div>\r\n                      <p>\r\n                        Vous êtes sur le point de supprimer ce commentaire, êtes\r\n                        vous sur ?\r\n                      </p>\r\n                      <Button\r\n                        disabled=\"\"\r\n                        value=\"Confirmer\"\r\n                        onClick={() => moderateComment(comment.id)}\r\n                      />\r\n                    </div>\r\n                  ) : null}\r\n                </div>\r\n              ))}\r\n            </div>\r\n            <div className=\"comments row\">\r\n              <div className=\"col-9\">\r\n                <Input\r\n                  className=\"input-newComment form-control\"\r\n                  name=\"Commenter ce post\"\r\n                  onChange={handleChangeCommentContent}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"col-3\">\r\n                <Button\r\n                  className=\"btn btn-outline-primary btn-new-comment\"\r\n                  onClick={() => creatingComment(postId)}\r\n                  disabled={validCommentContent ? \"\" : \"disabled\"}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Home\\index.js",["91"],"import React, { useContext } from \"react\";\nimport Input from \"../Input/index.js\";\nimport Sidebar from \"../Sidebar/index.js\";\nimport Posts from \"..//Posts/index.js\";\nimport { UserContext } from \"../../App.js\";\nimport \"./Home.css\";\n\nconst Home = ({ profile }) => {\n  const auth = useContext(UserContext);\n  return (\n    <div className=\"home-container\">\n      <div className=\"section-container\">\n        {profile ? <Posts userPosts={true} /> : <Posts />}\n      </div>\n\n      <div className=\"row\">\n        <div className=\"sidebar-container col-2\">\n          <Sidebar />\n        </div>\n\n        <div className=\"container col-10\">\n          <header className=\"home-header\">\n            <h2 className=\"homeTitle\">\n              Bonjour {auth.user.firstName}, bienvenue sur Groupomania !{\" \"}\n            </h2>\n          </header>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Form\\index.js",["92","93","94","95","96","97","98"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Input from \"../Input/index.js\";\r\nimport Button from \"../Button/index.js\";\r\nimport axios from \"axios\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { UserContext } from \"../../App.js\";\r\nimport {\r\n  signUser,\r\n  logUser,\r\n  updateUserData,\r\n  updatePassword\r\n} from \"../FetchData/Users/index\";\r\n\r\nconst Form = ({ signIn, logIn, updateUser }) => {\r\n  const auth = useContext(UserContext);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [validFirstName, setValidFirstName] = useState(false);\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [validLastName, setValidLastName] = useState(false);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [validEmail, setValidEmail] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [errorPassword, setErrorPassword] = useState(false);\r\n\r\n  const [validPassword, setValidPassword] = useState(false);\r\n  const [validNewPassword, setValidNewPassword] = useState(false);\r\n\r\n  const emailReg = new RegExp(/^([\\w-\\.]+)@((?:[\\w]+\\.)+)([a-zA-Z]{2,4})/i);\r\n\r\n  function handleChangeFirstname(event) {\r\n    setFirstName(event.target.value);\r\n    setValidFirstName(event.target.value !== \"\" ? true : false);\r\n  }\r\n\r\n  function handleChangeLastname(event) {\r\n    setLastName(event.target.value);\r\n    setValidLastName(event.target.value !== \"\" ? true : false);\r\n  }\r\n  function handleChangeEmail(event) {\r\n    setEmail(event.target.value);\r\n    // setValidEmail(emailReg.test(event.target.value) ? true : false);\r\n    setValidEmail(true);\r\n  }\r\n  function handleChangeEmailLog(event) {\r\n    setEmail(event.target.value);\r\n    setValidEmail(event.target.value !== \"\" ? true : false);\r\n  }\r\n  function handleChangePassword(event) {\r\n    setPassword(event.target.value);\r\n    setValidPassword(event.target.value !== \"\" ? true : false);\r\n  }\r\n\r\n  function handleChangeNewPassword(event) {\r\n    setNewPassword(event.target.value);\r\n    setValidNewPassword(event.target.value !== \"\" ? true : false);\r\n  }\r\n\r\n  const login = async () => {\r\n    try {\r\n      const result = await logUser(email, password);\r\n\r\n      if (result) {\r\n        auth.setUser(result.data.user);\r\n        localStorage.setItem(\"token\", result.data.token);\r\n        console.log(result);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const signup = async () => {\r\n    try {\r\n      const result = await signUser(firstName, lastName, email, password);\r\n\r\n      if (result) {\r\n        auth.setUser(result.data.user);\r\n        localStorage.setItem(\"token\", result.data.token);\r\n        console.log(\"Utilisateur suivant a bien été créé :\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateProfile = async () => {\r\n    try {\r\n      const result = await updateUserData(firstName, lastName, email, token);\r\n      if (result) {\r\n        console.log(\"L'utilisateur a bien été modifié\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const updateNewPassword = async () => {\r\n    try {\r\n      const result = await updatePassword(password, newPassword, token);\r\n      if (result) {\r\n        console.log(\"Le mot de passe a bien été modifié\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={updateUser ? \"update-form\" : null}>\r\n      {signIn ? (\r\n        <div>\r\n          <div>\r\n            <p>\r\n              Vous n'avez pas encore de compte ?<br />\r\n              Inscrivez-vous !\r\n            </p>\r\n          </div>\r\n          <Input\r\n            name=\"Prénom\"\r\n            onChange={handleChangeFirstname}\r\n            value={firstName}\r\n          />\r\n\r\n          <Input name=\"Nom\" onChange={handleChangeLastname} value={lastName} />\r\n          <Input\r\n            type=\"email\"\r\n            name=\"Email\"\r\n            onChange={handleChangeEmail}\r\n            value={email}\r\n          />\r\n\r\n          {email && !validEmail ? (\r\n            <p className=\"msgInvalid\">Cet email n'est pas valide</p>\r\n          ) : null}\r\n          {validEmail ? <p className=\"msgValid\">Cet email est valide</p> : null}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"Mot de passe\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n          />\r\n\r\n          <Button\r\n            onClick={signup}\r\n            disabled={\r\n              validPassword &&\r\n              validEmail &&\r\n              validFirstName &&\r\n              validLastName === true\r\n                ? \"\"\r\n                : \"disabled\"\r\n            }\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      {logIn ? (\r\n        <div>\r\n          <div>\r\n            <p>\r\n              Vous êtes déjà inscrit ?<br />\r\n              Connectez-vous !\r\n            </p>\r\n          </div>\r\n          <Input name=\"Email\" onChange={handleChangeEmailLog} value={email} />\r\n\r\n          <Input\r\n            name=\"Mot de passe\"\r\n            type=\"password\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n          />\r\n\r\n          <Button\r\n            onClick={login}\r\n            disabled={validPassword && validEmail === true ? \"\" : \"disabled\"}\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      {updateUser ? (\r\n        <div>\r\n          <div>\r\n            <p className=\"msgValidSidebar\">\r\n              Modifiez vos informations générales !\r\n            </p>\r\n          </div>\r\n          <Input\r\n            name={auth.user.firstName}\r\n            onChange={handleChangeFirstname}\r\n            value={firstName}\r\n          />\r\n\r\n          <Input\r\n            name={auth.user.lastName}\r\n            onChange={handleChangeLastname}\r\n            value={lastName}\r\n          />\r\n          <Input\r\n            type=\"email\"\r\n            name={auth.user.email}\r\n            onChange={handleChangeEmail}\r\n            value={email}\r\n          />\r\n\r\n          {email && !validEmail ? (\r\n            <p className=\"msgInvalid\">Cet email n'est pas valide</p>\r\n          ) : null}\r\n          {validEmail ? (\r\n            <p className=\"msgValidSidebar\">Cet email est valide</p>\r\n          ) : null}\r\n\r\n          <Button\r\n            className=\"btn btn-outline-light\"\r\n            onClick={updateProfile}\r\n            disabled={\r\n              validEmail && validFirstName && validLastName === true\r\n                ? \"\"\r\n                : \"disabled\"\r\n            }\r\n          />\r\n\r\n          <p className=\"msgValidSidebar\">Modifiez votre mot de passe !</p>\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"Mot de passe actuel\"\r\n            onChange={handleChangePassword}\r\n            value={password}\r\n          />\r\n\r\n          {errorPassword ? (\r\n            <p className=\"msgInvalid\">Le mot de passe n'est pas correct !</p>\r\n          ) : null}\r\n\r\n          <Input\r\n            type=\"password\"\r\n            name=\"Nouveau mot de passe\"\r\n            onChange={handleChangeNewPassword}\r\n            value={password}\r\n          />\r\n\r\n          <Button\r\n            className=\"btn btn-outline-light\"\r\n            onClick={updateNewPassword}\r\n            disabled={validPassword && validNewPassword ? \"\" : \"disabled\"}\r\n          />\r\n        </div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Button\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Input\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\LogIn\\index.js",["99"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"../Form/index.js\";\nimport \"./LogIn.css\";\nimport logo from \"../../icons/icon-c.png\";\nimport { UserContext } from \"../../App.js\";\n\nfunction LogIn() {\n  const auth = useContext(UserContext);\n  const [redirect, setRedirect] = useState(false);\n\n  const getRedirect = () => {\n    if (auth?.user) {\n      setRedirect(true);\n    }\n  };\n\n  useEffect(() => {\n    getRedirect();\n  }, [auth, redirect]);\n\n  return redirect ? (\n    <Redirect to={{ pathname: \"/\" }} />\n  ) : (\n    <div className=\"login-container\">\n      <header className=\"login-header\">\n        <div className=\"login-container-title\">\n          <img className=\"login-logo\" src={logo} alt=\"groupomania-logo\" />\n          <h1 className=\"login-title\">Groupomania</h1>\n        </div>\n        <p className=\"login-subtitle\">Votre nouveau réseau d'entreprise</p>\n      </header>\n      <div className=\"form-container\">\n        <Form logIn={true} />\n        <Form signIn={true} />\n      </div>\n    </div>\n  );\n}\n\nexport default LogIn;\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Posts\\index.js",["100","101","102","103","104"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport Comments from \"../Comments/index.js\";\r\nimport Input from \"../Input/index\";\r\nimport User from \"../User/index\";\r\nimport decodedToken from \"../DecodeToken/index\";\r\nimport Button from \"../Button/index\";\r\nimport { UserContext } from \"../../App.js\";\r\nimport {\r\n  getPosts,\r\n  postPost,\r\n  updatePost,\r\n  getUserPosts\r\n} from \"../FetchData/Posts/index\";\r\nimport { getUser, updateProfile } from \"../FetchData/Users/index\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport \"./Posts.css\";\r\n\r\nconst Posts = ({ userPosts }) => {\r\n  const userId = useParams();\r\n  const auth = useContext(UserContext); // auth Context\r\n  const token = localStorage.getItem(\"token\"); // token localStorage\r\n\r\n  const [user, setUser] = useState(\"\");\r\n\r\n  const [redirectToHome, setRedirectToHome] = useState(false);\r\n\r\n  // Concernant redirection vers login\r\n  const [redirectToLogin, setRedirectToLogin] = useState(false); // redirection si pas de token\r\n\r\n  // Les posts qui apparaissent (deux possibiltié : tout les posts, ou les posts d'un seul utilisateur)\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  // Concernant toutes les logiques pour déployer des fenêtres\r\n  const [showCreatingPost, setShowCreatingPost] = useState(false); // faire apparaitre création de poste\r\n  // const [showComments, setShowComments] = useState(false); // faire apparaitre création de commentaire et commentaires\r\n  const [showModeratePost, setShowModeratePost] = useState(false); // faire apparaitre bouton de modération\r\n  const [showModerateProfile, setShowModerateProfile] = useState(false); // faire apparaitre bouton de modération\r\n\r\n  // Concernant posts\r\n  const [newPost, setNewPost] = useState(null); // un nouveau post est créé\r\n  const [postTitle, setPostTitle] = useState(\"\"); // titre du post\r\n  const [postContent, setPostContent] = useState(\"\"); // contenu du post\r\n  const [validPostTitle, setValidPostTitle] = useState(false); // regex titre du post\r\n  const [validPostContent, setValidPostContent] = useState(false); // regex contenu du post\r\n  const [majPost, setMajPost] = useState(false); // modération d'un post\r\n\r\n  // Pour le modérateur, stock l'id de l'utilisateur que l'on veut visionner, puis passe cette valeur dans la props de posts\r\n  const [profile, setProfile] = useState(false); //\r\n\r\n  // gestion d'événements des inputs\r\n  const handleChangePostTitle = event => {\r\n    setPostTitle(event.target.value);\r\n    setValidPostTitle(event.target.value !== \"\" ? true : false);\r\n  };\r\n  const handleChangePostContent = event => {\r\n    setPostContent(event.target.value);\r\n    setValidPostContent(event.target.value !== \"\" ? true : false);\r\n  };\r\n\r\n  // On utilise cette fonction avant chaque reqûete vers le backend afin d'éviter une erreur serveur si token est expiré\r\n  const getRedirect = () => {\r\n    const decode = decodedToken();\r\n    if (!decode) {\r\n      setRedirectToLogin(true);\r\n      auth.setUser(null);\r\n    }\r\n  };\r\n\r\n  // get & set posts\r\n  const getSetPosts = async () => {\r\n    if (userPosts) {\r\n      const resultPosts = await getUserPosts(token, userId.id);\r\n      const resultUser = await getUser(token, userId.id);\r\n      setUser(resultUser.data.userFound);\r\n      setPosts(resultPosts.data.allPosts);\r\n    } else {\r\n      const result = await getPosts(token);\r\n      setPosts(result.data.allPosts);\r\n    }\r\n  };\r\n\r\n  // Fait apparaître création de post\r\n  const seeCreatingPost = () => {\r\n    setShowCreatingPost(!showCreatingPost);\r\n  };\r\n\r\n  const creatingPost = async () => {\r\n    getRedirect();\r\n    const decode = decodedToken();\r\n    if (decode) {\r\n      try {\r\n        const result = await postPost(postTitle, postContent, token);\r\n        setNewPost(result.data.newPost);\r\n        // il y a surement mieux à faire\r\n        setPostTitle(\"\");\r\n        setPostContent(\"\");\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      console.log(\"Votre session a expiré\");\r\n    }\r\n  };\r\n\r\n  // Fait apparaitre demande de confirmation de modération d'un post\r\n  const modalModeratePost = () => {\r\n    setShowModeratePost(!showModeratePost);\r\n  };\r\n\r\n  // Modération d'un post\r\n  const moderatePost = async postId => {\r\n    const result = await updatePost(token, postId);\r\n    setNewPost(true);\r\n    setShowModeratePost(!showModeratePost);\r\n  };\r\n\r\n  const modalModerateProfile = () => {\r\n    setShowModerateProfile(!showModerateProfile);\r\n  };\r\n\r\n  // Modération d'un post\r\n  const moderateProfile = async userId => {\r\n    const result = await updateProfile(token, userId);\r\n  };\r\n\r\n  // Fonction useEffect\r\n  useEffect(() => {\r\n    getRedirect();\r\n    const decode = decodedToken();\r\n    if (decode) {\r\n      getSetPosts();\r\n    }\r\n  }, [newPost]);\r\n\r\n  return redirectToLogin ? (\r\n    <Redirect to={{ pathname: \"/login\" }} />\r\n  ) : profile ? (\r\n    <Redirect to={{ pathname: `/profile/${profile}` }} />\r\n  ) : redirectToHome ? (\r\n    <Redirect to={{ pathname: \"/\" }} />\r\n  ) : (\r\n    <div>\r\n      {!userPosts ? (\r\n        <Button\r\n          onClick={seeCreatingPost}\r\n          disabled=\"\"\r\n          className=\"btn btn-outline-primary bouton btn-seecreatingpost\"\r\n          value=\"Créer un nouveau post\"\r\n        />\r\n      ) : (\r\n        <div>\r\n          <div>\r\n            <Button\r\n              onClick={() => setRedirectToHome(true)}\r\n              disabled=\"\"\r\n              className=\"btn btn-outline-primary bouton btn-seecreatingpost\"\r\n              value=\"Retour à tous les posts\"\r\n            />\r\n          </div>\r\n          <div className=\"profile\">\r\n            <div className=\"profile-infos\">\r\n              <p className=\"infos-title\">Identifiant</p>\r\n              <p> {user.id}</p>\r\n            </div>\r\n            <div className=\"profile-infos\">\r\n              <p className=\"infos-title\">Prénom</p>\r\n              <p> {user.firstName}</p>\r\n            </div>\r\n            <div className=\"profile-infos\">\r\n              <p className=\"infos-title\">Nom</p>\r\n              <p> {user.lastName}</p>\r\n            </div>\r\n            <div className=\"profile-infos\">\r\n              <p className=\"infos-title\">Email</p>\r\n              <p> {user.email}</p>\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={modalModerateProfile}\r\n                disabled=\"\"\r\n                className=\"btn btn-outline-primary bouton btn-moderate-profile\"\r\n                value=\"Modérer\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {showModerateProfile ? (\r\n        <div>\r\n          Vous êtes sur le point de supprimer ce profil, êtes vous sur ?\r\n          <Button\r\n            onClick={() => moderateProfile(userId.id)}\r\n            disabled=\"\"\r\n            className=\"btn btn-outline-primary bouton btn-seecreatingpost\"\r\n            value=\"Confirmer\"\r\n          />\r\n        </div>\r\n      ) : null}\r\n\r\n      {showCreatingPost ? (\r\n        <div id=\"createPostForm\">\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <Input\r\n                className=\"new-post-title form-control\"\r\n                name=\"Titre du post\"\r\n                onChange={handleChangePostTitle}\r\n                value={postTitle}\r\n              />\r\n              <Input\r\n                className=\"new-post-content form-control\"\r\n                name=\"Contenu du post\"\r\n                onChange={handleChangePostContent}\r\n                value={postContent}\r\n              />\r\n              <Button\r\n                onClick={creatingPost}\r\n                disabled={validPostTitle && validPostContent ? \"\" : \"disabled\"}\r\n                value=\"Envoyer\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n      {posts.map(post => (\r\n        <div key={post.id} id={post.id} className=\"card\">\r\n          <div className=\"card-body\">\r\n            <div className=\"card-header row\">\r\n              <h6 className=\"post-user col-4\">\r\n                {auth?.user.moderator ? (\r\n                  <Button\r\n                    className=\"btn btn-outline-primary btn-post\"\r\n                    disabled=\"\"\r\n                    onClick={() => setProfile(post.userId)}\r\n                    value={<User id={post.userId} />}\r\n                  />\r\n                ) : (\r\n                  <User id={post.userId} />\r\n                )}\r\n              </h6>\r\n\r\n              <h6 className=\"post-title col-4\">{post.titlePost}</h6>\r\n\r\n              {auth?.user.moderator ? (\r\n                <div className=\"col-4 post-moderate\">\r\n                  <Button\r\n                    className=\"btn btn-outline-primary btn-post\"\r\n                    disabled=\"\"\r\n                    value=\"Modérer\"\r\n                    onClick={modalModeratePost}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n\r\n              {showModeratePost ? (\r\n                <div className=\"confirm-moderate-post\">\r\n                  <p>\r\n                    Vous êtes sur le point de supprimer ce post, êtes vous sur ?\r\n                  </p>\r\n                  <Button\r\n                    disabled=\"\"\r\n                    value=\"Confirmer\"\r\n                    onClick={() => moderatePost(post.id)}\r\n                  />\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n\r\n            <div className=\"line\"></div>\r\n\r\n            <p className=\"post-content\">Contenue du post : {post.content}</p>\r\n\r\n            <div className=\"line\"></div>\r\n\r\n            <div>\r\n              <Comments postId={post.id} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Sidebar\\index.js",["105"],"import React, { useState } from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport logo from \"../../icons/icon-c.png\";\r\nimport Button from \"../Button/index\";\r\nimport Form from \"../Form/index\";\r\nimport { deleteUser } from \"../FetchData/Users/index.js\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n  const [redirect, setRedirect] = useState(false);\r\n  const [showUpdatingProfile, setShowUpdatingProfile] = useState(false);\r\n  const [confirmDelete, setConfirmDelete] = useState(false);\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  const logout = async () => {\r\n    localStorage.removeItem(\"token\");\r\n    setRedirect(true);\r\n  };\r\n\r\n  const deleteProfile = async () => {\r\n    setConfirmDelete(!confirmDelete);\r\n  };\r\n\r\n  const confirmDeleteProfile = async () => {\r\n    const inactiveUser = await deleteUser(token);\r\n    console.log(\"L'utilisateur a bien été inactivé\");\r\n    logout();\r\n  };\r\n\r\n  const seeUpdatingProfile = async () => {\r\n    setShowUpdatingProfile(!showUpdatingProfile);\r\n  };\r\n\r\n  return redirect ? (\r\n    <Redirect to={{ pathname: \"/login\" }} />\r\n  ) : (\r\n    <div className=\"sidebar\">\r\n      <div className=\"logo-home\">\r\n        <img className=\"home-logo\" src={logo} alt=\"groupomania-logo\" />\r\n        <h1>Groupomania</h1>\r\n      </div>\r\n      <div className=\"menu\">\r\n        <Button\r\n          onClick={seeUpdatingProfile}\r\n          disabled=\"\"\r\n          className=\"btn btn-outline-light bouton\"\r\n          value=\"Mon Profil\"\r\n        />\r\n        {showUpdatingProfile ? <Form updateUser={true} /> : null}\r\n        <Button\r\n          onClick={deleteProfile}\r\n          disabled=\"\"\r\n          className=\"btn btn-outline-light bouton\"\r\n          value=\"Supprimer mon profil\"\r\n        />\r\n        {confirmDelete ? (\r\n          <div className=\"confirm-delete\">\r\n            <p>\r\n              Vous êtes sur le point de supprimer votre profil, cette action est\r\n              définitive, êtes vous sur ?\r\n            </p>\r\n            <Button\r\n              onClick={confirmDeleteProfile}\r\n              disabled=\"\"\r\n              value=\"Confirmez\"\r\n            />\r\n          </div>\r\n        ) : null}\r\n        <Button\r\n          onClick={logout}\r\n          disabled=\"\"\r\n          className=\"btn btn-outline-light bouton\"\r\n          value=\"Deconnexion\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\PrivateRoute\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\DecodeToken\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\FetchData\\Posts\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\FetchData\\Users\\index.js",[],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\FetchData\\Comments\\index.js",[],["106","107"],"C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\User\\index.js",["108"],"import React, { useEffect, useState } from \"react\";\r\nimport { getUser } from \"../FetchData/Users\";\r\n\r\nconst User = ({ id }) => {\r\n  const token = localStorage.getItem(\"token\");\r\n  const [postsUser, setPostsUser] = useState(null);\r\n\r\n  const getSetUser = async () => {\r\n    const result = await getUser(token, id);\r\n    setPostsUser(result.data.userFound);\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   getSetUser();\r\n  // });\r\n  getSetUser();\r\n\r\n  return postsUser ? (\r\n    <div className=\"user\">\r\n      {postsUser.firstName} {postsUser.lastName}\r\n    </div>\r\n  ) : (\r\n    <div>Chargement</div>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","C:\\Users\\pierr\\Desktop\\groupomania-show\\frontend\\src\\components\\Profile\\index.js",["109","110","111","112","113"],"import React, { useEffect, useState } from \"react\";\r\nimport { getUserPosts } from \"../FetchData/Posts\";\r\nimport { getUser } from \"../FetchData/Users\";\r\nimport User from \"../User/index\";\r\nimport Button from \"../Button/index\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n  const userId = useParams();\r\n  const token = localStorage.getItem(\"token\");\r\n  const [profile, setProfile] = useState(null);\r\n  const [postsUser, setPostsUser] = useState(null);\r\n\r\n  const getSetUser = async () => {\r\n    const result = await getUser(token, userId.id);\r\n    setProfile(result.data.userFound);\r\n  };\r\n\r\n  const getSetUserPosts = async () => {\r\n    const result = await getUserPosts(token, userId.id);\r\n    setPostsUser(result.data.allPosts);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSetUser();\r\n    getSetUserPosts();\r\n  });\r\n\r\n  return profile && postsUser ? (\r\n    <div>\r\n      <h1>\r\n        {profile.firstName} {profile.lastName}\r\n      </h1>\r\n      <h2>{profile.email}</h2>\r\n      {postsUser.map(post => (\r\n        <div key={post.id} id={post.id} className=\"card\">\r\n          <div>{post.titlePost}</div>\r\n          <div>{post.content}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  ) : (\r\n    <div>Chargement</div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n",["114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":17,"column":10,"nodeType":"122","messageId":"123","endLine":17,"endColumn":18},{"ruleId":"120","severity":1,"message":"124","line":43,"column":15,"nodeType":"122","messageId":"123","endLine":43,"endColumn":21},{"ruleId":"120","severity":1,"message":"124","line":64,"column":11,"nodeType":"122","messageId":"123","endLine":64,"endColumn":17},{"ruleId":"125","severity":1,"message":"126","line":87,"column":6,"nodeType":"127","endLine":87,"endColumn":18,"suggestions":"128"},{"ruleId":"120","severity":1,"message":"129","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":13},{"ruleId":"120","severity":1,"message":"130","line":1,"column":39,"nodeType":"122","messageId":"123","endLine":1,"endColumn":48},{"ruleId":"120","severity":1,"message":"131","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":13},{"ruleId":"120","severity":1,"message":"132","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":18},{"ruleId":"120","severity":1,"message":"133","line":5,"column":20,"nodeType":"122","messageId":"123","endLine":5,"endColumn":30},{"ruleId":"120","severity":1,"message":"134","line":26,"column":25,"nodeType":"122","messageId":"123","endLine":26,"endColumn":41},{"ruleId":"120","severity":1,"message":"135","line":31,"column":9,"nodeType":"122","messageId":"123","endLine":31,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":31,"column":38,"nodeType":"138","messageId":"139","endLine":31,"endColumn":39,"suggestions":"140"},{"ruleId":"125","severity":1,"message":"141","line":20,"column":6,"nodeType":"127","endLine":20,"endColumn":22,"suggestions":"142"},{"ruleId":"120","severity":1,"message":"143","line":45,"column":10,"nodeType":"122","messageId":"123","endLine":45,"endColumn":17},{"ruleId":"120","severity":1,"message":"144","line":45,"column":19,"nodeType":"122","messageId":"123","endLine":45,"endColumn":29},{"ruleId":"120","severity":1,"message":"124","line":112,"column":11,"nodeType":"122","messageId":"123","endLine":112,"endColumn":17},{"ruleId":"120","severity":1,"message":"124","line":123,"column":11,"nodeType":"122","messageId":"123","endLine":123,"endColumn":17},{"ruleId":"125","severity":1,"message":"145","line":133,"column":6,"nodeType":"127","endLine":133,"endColumn":15,"suggestions":"146"},{"ruleId":"120","severity":1,"message":"147","line":25,"column":11,"nodeType":"122","messageId":"123","endLine":25,"endColumn":23},{"ruleId":"116","replacedBy":"148"},{"ruleId":"118","replacedBy":"149"},{"ruleId":"120","severity":1,"message":"130","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"150","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":12},{"ruleId":"120","severity":1,"message":"151","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":14},{"ruleId":"120","severity":1,"message":"152","line":7,"column":20,"nodeType":"122","messageId":"123","endLine":7,"endColumn":26},{"ruleId":"120","severity":1,"message":"153","line":8,"column":3,"nodeType":"122","messageId":"123","endLine":8,"endColumn":9},{"ruleId":"120","severity":1,"message":"154","line":9,"column":3,"nodeType":"122","messageId":"123","endLine":9,"endColumn":8},{"ruleId":"116","replacedBy":"155"},{"ruleId":"118","replacedBy":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'redirect' is assigned a value but never used.","Identifier","unusedVar","'result' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getSetComments'. Either include it or remove the dependency array.","ArrayExpression",["159"],"'Input' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'Redirect' is defined but never used.","'useHistory' is defined but never used.","'setErrorPassword' is assigned a value but never used.","'emailReg' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["160","161"],"React Hook useEffect has a missing dependency: 'getRedirect'. Either include it or remove the dependency array.",["162"],"'majPost' is assigned a value but never used.","'setMajPost' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getRedirect' and 'getSetPosts'. Either include them or remove the dependency array.",["163"],"'inactiveUser' is assigned a value but never used.",["157"],["158"],"'User' is defined but never used.","'Button' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.",["157"],["158"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"messageId":"166","fix":"167","desc":"168"},{"messageId":"169","fix":"170","desc":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [getSetComments, newComment]",{"range":"176","text":"177"},"removeEscape",{"range":"178","text":"179"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"180","text":"181"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [auth, getRedirect, redirect]",{"range":"182","text":"183"},"Update the dependencies array to be: [getRedirect, getSetPosts, newPost]",{"range":"184","text":"185"},[2857,2869],"[getSetComments, newComment]",[1192,1193],"",[1192,1192],"\\",[500,516],"[auth, getRedirect, redirect]",[4757,4766],"[getRedirect, getSetPosts, newPost]"]